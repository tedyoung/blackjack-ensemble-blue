package com.jitterted.ebp.blackjack.domain.assertj;

import com.jitterted.ebp.blackjack.domain.Hand;

/**
 * {@link Hand} specific assertions - Generated by CustomAssertionGenerator.
 * <p>
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it,
 * extend {@link AbstractHandAssert} instead.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public class HandAssert extends AbstractHandAssert<HandAssert, Hand> {

    /**
     * Creates a new <code>{@link HandAssert}</code> to make assertions on actual Hand.
     *
     * @param actual the Hand we want to make assertions on.
     */
    public HandAssert(Hand actual) {
        super(actual, HandAssert.class);
    }

    /**
     * An entry point for HandAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
     * With a static import, one can write directly: <code>assertThat(myHand)</code> and get specific assertion with code completion.
     *
     * @param actual the Hand we want to make assertions on.
     * @return a new <code>{@link HandAssert}</code>
     */
    @org.assertj.core.util.CheckReturnValue
    public static HandAssert assertThat(Hand actual) {
        return new HandAssert(actual);
    }

    public CardAssert holeCard() {
        return new CardAssert(actual.cards().get(1));
    }

    public CardAssert firstCard() {
        return new CardAssert(actual.cards().get(0));
    }
}
