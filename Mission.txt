Mission Ideas
-------------

# Upcoming

[ ] Enforce constraints:

    [X] Can only call determineOutcome() if the game is over Throw IllegalStateException

    [ ] Can't draw card into hand if it's busted - throw an IllegalStateException

[ ] Persist the final state and outcome of a game when it's over

    [ ] Where/how to store?

        [ ] Write to a file, comma-separated (csv), append-only

            [ ] Following Hexagonal architecture

                [X] Create an Port interface for writing
                [X] Test via behavior (spy)
    ----------> [ ] Implement file-based storage:
                    Each line of the file contains (separated by commas)
                    the final hands for the dealer and player
                    (each card is Rank+Suit, and cards are separated
                     by slashes), and the outcome of the round, e.g.:

                    A♥/9♥,3♣/5♠/10♠,Player Loses

                [X] Fix flaky test: BlackjackControllerWiringTest#donePageShowsFinalGameViewWithOutcome
                [ ] Possible domain language fixes: round? game?
                [ ] Need a Service class

        [ ] Store in database (H2 first)

        [ ] Test using testcontainers.io


# Completed

[X] Make sure game is over when player is dealt Blackjack

[x] Add constraints -- throw exceptions if try to hit or stand when game is already over
